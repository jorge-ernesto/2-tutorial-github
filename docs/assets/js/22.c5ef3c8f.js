(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{304:function(a,s,e){"use strict";e.r(s);var t=e(14),r=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"introduccion-a-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduccion-a-git"}},[a._v("#")]),a._v(" Introducción a GIT")]),a._v(" "),s("p",[a._v("Está guía está diseñada para poder obtener el código del curso de GIT / GITHUB de una forma amigable y en español.")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("Aviso")]),a._v(" "),s("p",[a._v("Esta guía está en constante actualización, podría no estar completa.")])]),a._v(" "),s("h2",{attrs:{id:"enlaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enlaces"}},[a._v("#")]),a._v(" Enlaces")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Instalar Git"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Github"),s("OutboundLink")],1)])]),a._v(" "),s("h2",{attrs:{id:"¿que-es-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#¿que-es-git"}},[a._v("#")]),a._v(" ¿Qué es GIT?")]),a._v(" "),s("p",[a._v("Es un software de control de versiones, su propósito es llevar registro de los cambios en archivos de computadora y coordinar el trabajo que varias personas realizan sobre archivos compartidos (También puedes trabajar solo no hay problema 😃). Existe la posibilidad de trabajar de forma remota y una opción es GitHub.")]),a._v(" "),s("h3",{attrs:{id:"flujo-de-trabajo-de-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flujo-de-trabajo-de-git"}},[a._v("#")]),a._v(" Flujo de trabajo de GIT")]),a._v(" "),s("br"),a._v(" "),s("img",{attrs:{src:a.$withBase("/img/git-flujo.png"),alt:"flujo git",width:"500px"}}),a._v(" "),s("p",[s("strong",[a._v("Tratando de explicar la imagen:")]),a._v(" Tenemos nuestro directorio local (una carpeta en nuestro pc) con muchos archivos, Git nos irá registrando los cambios de archivos o códigos cuando nosotros le indiquemos, así podremos viajar en el tiempo retrocediendo cambios o restaurando versiones de código, ya sea en Local o de forma Remota (servidor externo). En la práctica quedará más claro.")]),a._v(" "),s("h2",{attrs:{id:"¿que-es-github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#¿que-es-github"}},[a._v("#")]),a._v(" ¿Qué es GitHub?")]),a._v(" "),s("p",[a._v("Es una plataforma de desarrollo colaborativo para alojar proyectos (en la nube) utilizando el sistema de control de versiones Git, Además cuenta con una herramienta muy útil que es GitHub Pages donde podemos publicar nuestros proyectos estáticos (HTML, CSS y JS) gratis.")]),a._v(" "),s("h2",{attrs:{id:"fundamentos-de-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fundamentos-de-git"}},[a._v("#")]),a._v(" Fundamentos de GIT")]),a._v(" "),s("p",[a._v("En este apartado podrás comenzar a trabajar con git.")]),a._v(" "),s("h2",{attrs:{id:"comandos-basicos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#comandos-basicos"}},[a._v("#")]),a._v(" Comandos básicos")]),a._v(" "),s("p",[a._v("Aprendamos los primeros comandos con git")]),a._v(" "),s("h3",{attrs:{id:"version-de-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#version-de-git"}},[a._v("#")]),a._v(" Versión de git")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git version\n")])])]),s("h3",{attrs:{id:"registrar-nuevo-usuario-asociado-a-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registrar-nuevo-usuario-asociado-a-git"}},[a._v("#")]),a._v(" Registrar nuevo usuario asociado a git:")]),a._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),s("p",[s("strong",[a._v("No colocar como nombre de usuario")]),a._v(" el correo de su cuenta de Github, podría traer problemas a futuro.")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git config "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("name "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"mi nombre"')]),a._v("\n")])])]),s("p",[a._v("Es recomendable utilizar el correo asociado a Github")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("git config "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("email "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"myemail@example.com"')]),a._v("\n")])])]),s("h3",{attrs:{id:"ayuda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ayuda"}},[a._v("#")]),a._v(" Ayuda")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ayuda sobre los comandos")]),a._v("\ngit help\n")])])]),s("h3",{attrs:{id:"mi-primer-repositorio"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mi-primer-repositorio"}},[a._v("#")]),a._v(" Mi primer repositorio")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Iniciar un nuevo repositorio")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crear la carpeta oculta .git")]),a._v("\ngit init\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ver que archivos no han sido registrados")]),a._v("\ngit status\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Agregar todos los archivos para que esté pendiente de los cambios")]),a._v("\ngit add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crear commit (fotografía del proyecto en ese momento)")]),a._v("\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"primer commit"')]),a._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra la lista de commit del mas reciente al más antigüo")]),a._v("\ngit log\n")])])]),s("p",[a._v("En resumidas cuentas nosotros realizamos cambios en nuestros archivos, el comando "),s("code",[a._v("status")]),a._v(" verificará que archivos han sidos modificados.\nCuando deseemos registrar esos cambios tendremos que agregarlos con "),s("code",[a._v("add .")]),a._v(" así ya estará listo para poder hacer un commit.\nEl "),s("code",[a._v("commit")]),a._v(" realiza la copia de ese instante para poder volver en el tiempo si es que es necesario.")]),a._v(" "),s("h2",{attrs:{id:"trucos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#trucos"}},[a._v("#")]),a._v(" Trucos")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra en una línea los commit realizados")]),a._v("\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("oneline\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra en una línea los commit realizados pero más elegante")]),a._v("\ngit log "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("oneline "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("decorate "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("all "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("graph\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Solo muestra los archivos modificados")]),a._v("\ngit status "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("s\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("Diferencias entre -- y -")]),a._v(" "),s("p",[s("code",[a._v("--decorate")]),a._v(" hace referencia a una palabra "),s("br"),a._v(" "),s("code",[a._v("-s")]),a._v(" hace referencia al comando o a varios comandos, "),s("code",[a._v("-sa")]),a._v(" serían dos comandos diferentes")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Vemos información de la rama maestra")]),a._v("\ngit status "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("b\ngit status "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("sb "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Hace lo mismo que el comando anterior")]),a._v("\n")])])]),s("h2",{attrs:{id:"creando-alias-globales"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creando-alias-globales"}},[a._v("#")]),a._v(" Creando alias globales")]),a._v(" "),s("p",[a._v("Los alias nos sirven para crear atajos de comandos, podemos guardar diferentes alias de forma global y quedarán guardados en la configuración de git.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('// Guardamos el alias "lg" que ejecutará todo lo que está entre comillas')]),a._v("\ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global alias"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("lg "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"log --oneline --decorate --all --graph"')]),a._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Para ver el archivo config con los alias creados")]),a._v("\ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("e\n")])])]),s("p",[s("strong",[a._v("Vim")]),a._v(" es el editor de código en la línea de comandos")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v('Salir del modo edición "Vim"')]),a._v(" "),s("p",[a._v("Para salir del modo edición de la líneas de comando precionar "),s("code",[a._v(":q")]),a._v(", en caso de realizar algún cambio sin guardar escribir "),s("code",[a._v(":qa")]),a._v(" "),s("br"),a._v(" "),s("code",[a._v(":q!")]),a._v(" también sirve para salir sin guardar")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Modo lectura sin poder modificar")]),a._v("\ngit config "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("global "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("l\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Realiza el add . y commit más mensaje al mismo tiempo")]),a._v("\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("am "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"más comandos agregados"')]),a._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Para editar un commit, como por ej: el mensaje")]),a._v("\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("amend\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("Trucos de editor Vim")]),a._v(" "),s("p",[s("code",[a._v("i")]),a._v(" para comenzar a editar "),s("br"),a._v(" "),s("code",[a._v("esc")]),a._v(" para salir del modo edición "),s("br"),a._v(" "),s("code",[a._v("wq")]),a._v(" para guardar y salir "),s("br"),a._v(" "),s("code",[a._v("q!")]),a._v(" salir sin guardar cambios")])]),a._v(" "),s("h2",{attrs:{id:"viajes-a-traves-de-los-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#viajes-a-traves-de-los-commit"}},[a._v("#")]),a._v(" Viajes a través de los commit")]),a._v(" "),s("p",[a._v("Vamos a conocer como podemos movernos entre los diferentes commit que tengamos registrados, supongamos que tenemos los siguientes commit:")]),a._v(" "),s("ul",[s("li",[a._v("f82f457 (HEAD -> master) mas comandos agregados")]),a._v(" "),s("li",[a._v("f52f3da nuevos comandos en fundamentos.md")]),a._v(" "),s("li",[a._v("e4ab8af mi primer commit")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da")]),a._v("\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("mixed f52f3da\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da y eliminamos los cambios futuros")]),a._v("\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard f52f3da\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Muestra todos los cambios incluso si borramos los commit")]),a._v("\ngit reflog\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Viajamos al commit en específico f52f3da y podemos restaurar los archivos")]),a._v("\ngit reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("hard f52f3da\n")])])]),s("p",[a._v("Si no hicimos un commit pero aún así queremos revertir los cambios en un archivo específico podríamos utilizar el siguiente comando:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git checkout -- nombreArchivo.conExtensión\n")])])]),s("p",[a._v("Si deseamos destruir todos los cambios sin haber realizado un commit podemos utilizar:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("git reset --hard\n")])])]),s("p",[a._v("Para mayor información visite: "),s("a",{attrs:{href:"https://git-scm.com/book/es/v2/Herramientas-de-Git-Reiniciar-Desmitificado",target:"_blank",rel:"noopener noreferrer"}},[a._v("Click aquí"),s("OutboundLink")],1)]),a._v(" "),s("h2",{attrs:{id:"renombrar-archivos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#renombrar-archivos"}},[a._v("#")]),a._v(" Renombrar archivos")]),a._v(" "),s("p",[a._v("Puede que queramos renombrar un archivo, es recomendable hacerlo directamente en la línea de comandos para registrar los cambios con git.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Cambiar nombre")]),a._v("\ngit mv nombreOriginal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue nombreNuevo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue\n")])])]),s("p",[a._v("Recuerden hacer el commit para registrar los cambios en git.")]),a._v(" "),s("h2",{attrs:{id:"eliminar-archivos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eliminar-archivos"}},[a._v("#")]),a._v(" Eliminar archivos")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Cambiar nombre")]),a._v("\ngit rm nombreArchivo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vue\n")])])]),s("p",[a._v("También recordar hacer el commit para salgar cambios en git.")]),a._v(" "),s("h2",{attrs:{id:"ignorando-archivos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ignorando-archivos"}},[a._v("#")]),a._v(" Ignorando Archivos")]),a._v(" "),s("p",[a._v("Para no hacer seguimiento de carpetas o archivos, debemos crear el siguiente archivo:")]),a._v(" "),s("ul",[s("li",[a._v(".gitignore\n"),s("br"),a._v("\nSu estructura de ejemplo sería así:")])]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("arhivo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ignora el archivo en cuestion")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Ignora todos los arhivos con extensión .js")]),a._v("\nnode_modules"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//Ignora toda la carpeta")]),a._v("\n")])])]),s("h2",{attrs:{id:"ramas-o-branch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ramas-o-branch"}},[a._v("#")]),a._v(" Ramas o branch")]),a._v(" "),s("p",[a._v('Hasta el momento solo hemos trabajado en la rama "master" pero puede que necesitemos crear diferentes ramas para los seguimientos de git.')]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crea una nueva rama")]),a._v("\ngit branch nombreRama\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos muestra en que rama estamos")]),a._v("\ngit branch\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos movemos a la nueva rama")]),a._v("\ngit checkout nombreRama\n")])])]),s("p",[a._v("Podemos unir la rama master con la nueva, para eso tenemos que estar en la master para ejecutar el siguiente comando:")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Nos movemos a la nueva rama")]),a._v("\ngit merge nombreRama\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Eliminar una rama")]),a._v("\ngit branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("d nombreRama\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("Atajos")]),a._v(" "),s("p",[a._v("Podemos utilizar "),s("code",[a._v("git checkout -b nuevaRama")]),a._v(" para crear la nuevaRama y viajar a ella.")])]),a._v(" "),s("h2",{attrs:{id:"tags"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tags"}},[a._v("#")]),a._v(" Tags")]),a._v(" "),s("p",[a._v("Con los tags podemos hacer versiones de nuestro proyecto.")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Crear un tags")]),a._v("\ngit tag versionAlpha "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"versión alpha"')]),a._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Listar tags")]),a._v("\ngit tag\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Borrar tags")]),a._v("\ngit tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("d nombreTags\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Hacer una versión en un commit anterior ej: f52f3da")]),a._v("\ngit tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("a nombreTag f52f3da "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"version alpha"')]),a._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Mostrar información del tag")]),a._v("\ngit show nombreTag\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);